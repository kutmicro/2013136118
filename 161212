#include <LedControl.h>
#include <LiquidCrystal.h>


LedControl myMatrix = LedControl(2, 4, 3, 2);//매트릭스 모듈 연결.
LiquidCrystal lcd(12, 11, 6, 23, 5, 22);

//            col
//           0 1 2 3 ...
//       .
//       .
//       2
//row    1
//       0
//            vcc GND                     vcc GND
//
//         Matrix 1                      Matrix 2
//     myMatrix.setLed(0, 0, 0, HIGH);    myMatrix.setLed(1, 0, 0, HIGH);
//           setLed(매트릭스번호, col, row, HIGH)

int paddle1 = 2, paddle1Val;//1p 아날로그 회전 센서
int paddle2 = 3, paddle2Val;//2p 아날로그 회전 센서
int paddle3 = 4, paddle3Val;//속도조절용 아날로그 센서
int directionX = 1, directionY = 1;//공의 움직이는 방향, X=1이면 오른쪽, Y=1이면 위로
int column = random(4) + 6, row = random(7); //공의 초기 위치를 설정
int speed;// delay속도
int scoreA; //1p 점수
int scoreB; //2p 점수

void setup() {
  scoreA = 0;
  scoreB = 0;
  lcd.begin(16, 2);
  myMatrix.shutdown(0, false);
  myMatrix.shutdown(1, false);
  myMatrix.setIntensity(0, 8);
  myMatrix.setIntensity(1, 8);
  myMatrix.clearDisplay(0);
  myMatrix.clearDisplay(1);
  randomSeed(7);
}

void loop() {

  lcd.setCursor(0, 0);
  lcd.print("A: "); lcd.print(scoreA);
  lcd.setCursor(0, 1);
  lcd.print("B: "); lcd.print(scoreB);


  paddle1Val = analogRead(paddle1);
  paddle2Val = analogRead(paddle2);
  paddle3Val = analogRead(paddle3);
  paddle1Val = map(paddle1Val, 0, 600, 0, 6);
  paddle2Val = map(paddle2Val, 0, 600, 0, 6);
  paddle3Val = map(paddle3Val, 0, 600, 50, 300);

  speed = paddle3Val;
  column += directionX;
  row += directionY;

  //2p 막대 (왼쪽 매트릭스)
  if (column < 8) {
    //공이 막대에 닿았을때
    if (column == 1 && directionX == -1 && (paddle1Val == row || paddle1Val + 1 == row)) {
      directionX = 1;
    }
    //공이 막대 밑 끝에 닿았을때
    if (column == 1 && directionX == -1 && (paddle1Val == row + 1)) {
      directionX = 1;
      directionY = -1;
    }
    //공이 막대 위 끝에 닿았을때
    if (column == 1 && directionX == -1 && (paddle1Val + 1 == row - 1)) {
      directionX = 1;
      directionY = 1;
    }
  }

  //1p 막대 (오른쪽 매트릭스)
  if (column > 7) {
    //공이 막대에 닿았을때
    if (column == 14 && directionX == 1 && (paddle2Val == row || paddle2Val + 1 == row)) {
      directionX = -1;
    }
    //공이 막대 밑 끝에 닿았을때
    if (column == 14 && directionX == 1 && (paddle2Val == row + 1)) {
      directionX = -1;
      directionY = -1;
    }
    //공이 막대 위 끝에 닿았을때
    if (column == 14 && directionX == 1 && (paddle2Val + 1 == row - 1)) {
      directionX = -1;
      directionY = 1;
    }

  }
  //위,아래 천장에 닿았을 때
  if (row == 7 && directionY == 1) { //위 천장에 닿았을때 위로 움직이고 있으면
    directionY = -1; //아래로 움직이게 변경
  }
  if (row == 0 && directionY == -1) { //아래 천장에 닿았을때 아래로 움직이고 있으면
    directionY = 1; //위로 움직이게 변경
  }

  //공이 왼쪽,오른쪽 벽에 닿으면 점수 발생
  if (column == 0 || column == 15) {
    if (column == 0) {
      scoreB += 1;
    }
    else if (column == 15) {
      scoreA += 1;
    }
    oops();
    
    if (scoreA==5 || scoreB==5) { //1p, 2p가 5점이 됬다면
      lcd.setCursor(0, 0);
      if (scoreA == 5) {
        lcd.setCursor(0, 0);
        lcd.print("A Win !!@@!!");
        lcd.setCursor(0, 1);
        lcd.print("A Win !!@@!!");
      }
      else if (scoreB == 5) {
        lcd.setCursor(0, 0);
        lcd.print("B Win !!@@!!");
        lcd.setCursor(0, 1);
        lcd.print("B Win !!@@!!");
      }
      exit(-1);//종료
    }

  }
  //출력전에 클리어 해준다
  myMatrix.clearDisplay(0);
  myMatrix.clearDisplay(1);

  if (column > 7) { //현재 공의 위치가 2p쪽에 있으면 2p쪽에 공위치 표시
    myMatrix.setLed(1, column % 8, row, HIGH);
  } else { //1p쪽일때
    myMatrix.setLed(0, column, row, HIGH);
  }

  //왼쪽 막대와 오른쪽막대 출력
  myMatrix.setLed(0, 0, paddle1Val, HIGH);
  myMatrix.setLed(0, 0, paddle1Val + 1, HIGH);
  myMatrix.setLed(1, 7, paddle2Val, HIGH);
  myMatrix.setLed(1, 7, paddle2Val + 1, HIGH);

  //3번센서에서 받은값으로 delay해준다
  delay(speed);
}

void oops() {//화면 깜빡 깜빡하고 초기화
  for (int x = 0; x < 3; x++) {
    myMatrix.clearDisplay(0);
    myMatrix.clearDisplay(1);
    delay(250);
    for (int y = 0; y < 8; y++) {
      myMatrix.setRow(0, y, 255);
      myMatrix.setRow(1, y, 255);
    }
    delay(250);
  }
  //다음 공의 위치 랜덤으로 지정
  column = random(4) + 6;
  row = random(7);
}
